Summary of the class: 04 October 2021
        
        Today’s class was the continuation of the previous class, as we continued the discussion of sorting algorithms. We revised the selection and bubble sorts that we talked about in the previous class and moved on to the explanation of the Insertion sort and the Merge sort. 
        To  be honest I liked the insertion sort the most. Even though it is not faster than the selection sort or the bubble sort. So, Insertion sort compares not all the array at once, but it “divides” it, at first, to the first items, and makes sure that they are sorted right, then adds the third element to them and puts those three in the right order. And does it until the end. 
        When it comes to the Merge sort, I didn’t like it at all, even though it was the fastest one. In this case the initial array is divided, and the division is being done with several steps. At first, the array is divided into two equal parts, then those parts are divided into two equal parts and so on. It’s being done until there are only 1 separate element left. Then those elements are being compared and merged together, with the lowest at left and highest at right. The complexity of this type of sorting is n*logn, however, we haven’t proved it yet.